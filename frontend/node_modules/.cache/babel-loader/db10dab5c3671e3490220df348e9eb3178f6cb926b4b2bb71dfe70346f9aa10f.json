{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cesar\\\\OneDrive\\\\Documentos\\\\GitHub\\\\muebleria-app\\\\frontend\\\\src\\\\routes\\\\PrivateRoute.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/routes/PrivateRoute.jsx\nimport React, { useContext } from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoute({\n  allowedRoles\n}) {\n  _s();\n  const {\n    token,\n    user\n  } = useContext(AuthContext);\n\n  // 1) Si no hay token => al login\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 2) Si sí hay token pero rol no permitido => al home (o 403)\n  if (allowedRoles && (!user || !allowedRoles.includes(user.rol))) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 3) OK => renderizo la ruta hija\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}\n_s(PrivateRoute, \"zLzMlE82MlG5I17Rxt5MLM2mFLk=\");\n_c = PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","Navigate","Outlet","AuthContext","jsxDEV","_jsxDEV","PrivateRoute","allowedRoles","_s","token","user","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","includes","rol","_c","$RefreshReg$"],"sources":["C:/Users/cesar/OneDrive/Documentos/GitHub/muebleria-app/frontend/src/routes/PrivateRoute.jsx"],"sourcesContent":["// frontend/src/routes/PrivateRoute.jsx\r\nimport React, { useContext } from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nexport default function PrivateRoute({ allowedRoles }) {\r\n  const { token, user } = useContext(AuthContext);\r\n\r\n  // 1) Si no hay token => al login\r\n  if (!token) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // 2) Si sí hay token pero rol no permitido => al home (o 403)\r\n  if (allowedRoles && (!user || !allowedRoles.includes(user.rol))) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // 3) OK => renderizo la ruta hija\r\n  return <Outlet />;\r\n}\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,YAAYA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACrD,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGV,UAAU,CAACG,WAAW,CAAC;;EAE/C;EACA,IAAI,CAACM,KAAK,EAAE;IACV,oBAAOJ,OAAA,CAACJ,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIT,YAAY,KAAK,CAACG,IAAI,IAAI,CAACH,YAAY,CAACU,QAAQ,CAACP,IAAI,CAACQ,GAAG,CAAC,CAAC,EAAE;IAC/D,oBAAOb,OAAA,CAACJ,QAAQ;MAACU,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,oBAAOX,OAAA,CAACH,MAAM;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB;AAACR,EAAA,CAfuBF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}