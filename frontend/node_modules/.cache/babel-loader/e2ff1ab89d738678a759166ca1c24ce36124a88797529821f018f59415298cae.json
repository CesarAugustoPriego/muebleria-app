{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cesar\\\\OneDrive\\\\Documentos\\\\GitHub\\\\muebleria-app\\\\frontend\\\\src\\\\routes\\\\PrivateRoute.jsx\";\n// frontend/src/routes/PrivateRoute.jsx\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PrivateRoute({\n  allowedRoles = []\n}) {\n  // Obtener token y rol desde localStorage\n  const token = localStorage.getItem('token');\n  const rol = localStorage.getItem('rol');\n\n  // Si no hay token, redirigir a login\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si el rol no está en la lista de permitidos, redirigir a home\n  if (!allowedRoles.includes(rol)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Si pasa todas las validaciones, renderizar las rutas hijas\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}\n_c = PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","jsxDEV","_jsxDEV","PrivateRoute","allowedRoles","token","localStorage","getItem","rol","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","includes","_c","$RefreshReg$"],"sources":["C:/Users/cesar/OneDrive/Documentos/GitHub/muebleria-app/frontend/src/routes/PrivateRoute.jsx"],"sourcesContent":["// frontend/src/routes/PrivateRoute.jsx\r\nimport React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\n\r\nexport default function PrivateRoute({ allowedRoles = [] }) {\r\n  // Obtener token y rol desde localStorage\r\n  const token = localStorage.getItem('token');\r\n  const rol   = localStorage.getItem('rol');\r\n\r\n  // Si no hay token, redirigir a login\r\n  if (!token) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // Si el rol no está en la lista de permitidos, redirigir a home\r\n  if (!allowedRoles.includes(rol)) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // Si pasa todas las validaciones, renderizar las rutas hijas\r\n  return <Outlet />;\r\n}"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,YAAYA,CAAC;EAAEC,YAAY,GAAG;AAAG,CAAC,EAAE;EAC1D;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,MAAMC,GAAG,GAAKF,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC;;EAEzC;EACA,IAAI,CAACF,KAAK,EAAE;IACV,oBAAOH,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAI,CAACV,YAAY,CAACW,QAAQ,CAACP,GAAG,CAAC,EAAE;IAC/B,oBAAON,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,oBAAOZ,OAAA,CAACF,MAAM;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB;AAACE,EAAA,GAjBuBb,YAAY;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}