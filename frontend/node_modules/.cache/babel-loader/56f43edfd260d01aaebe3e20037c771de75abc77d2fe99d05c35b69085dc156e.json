{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\herna\\\\OneDrive\\\\Documentos\\\\GitHub\\\\muebleria-app\\\\frontend\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/LoginPage.jsx\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Navbar from '../components/Auth/Navbar';\nimport Login from '../components/Auth/Login';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { CartContext } from '../contexts/CartContext';\nimport { PurchaseContext } from '../contexts/PurchaseContext';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const {\n    login\n  } = useContext(AuthContext);\n  const {\n    clearCart\n  } = useContext(CartContext);\n  const {\n    clearPurchases\n  } = useContext(PurchaseContext);\n  const handleLogin = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const usuario = form.usuario.value.trim();\n    const password = form.password.value.trim();\n    if (!usuario || !password) {\n      setError('Faltan campos');\n      return;\n    }\n    try {\n      // 1) Autenticación: obtenemos sólo el token\n      const res = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: usuario,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setError(data.msg || 'Credenciales inválidas');\n        return;\n      }\n\n      // 2) Cargamos el perfil completo desde el backend\n      const perfilRes = await fetch('/api/usuario/perfil', {\n        headers: {\n          Authorization: `Bearer ${data.token}`\n        }\n      });\n      const perfil = await perfilRes.json();\n      if (!perfilRes.ok) {\n        throw new Error(perfil.msg || 'Error al cargar perfil');\n      }\n\n      // 3) Guardamos token + perfil en el contexto\n      //    (AuthContext.login ahora acepta ambos argumentos)\n      login(data.token, perfil);\n\n      // 4) Limpiamos carrito y compras de otras sesiones\n      clearCart();\n      clearPurchases();\n\n      // 5) Redirigimos según rol\n      if (perfil.rol === 'admin') {\n        navigate('/admin/dashboard');\n      } else if (perfil.rol === 'monitor') {\n        navigate('/monitor');\n      } else {\n        navigate('/');\n      }\n    } catch (err) {\n      console.error(err);\n      setError(err.message || 'Error de conexión con el servidor');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      onSubmit: handleLogin,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        textAlign: 'center',\n        marginTop: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginPage, \"RXxOAUAJS64Oc/Xz7fkfAY7tFAM=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","Navbar","Login","AuthContext","CartContext","PurchaseContext","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","navigate","error","setError","login","clearCart","clearPurchases","handleLogin","e","preventDefault","form","target","usuario","value","trim","password","res","fetch","method","headers","body","JSON","stringify","user","data","json","ok","msg","perfilRes","Authorization","token","perfil","Error","rol","err","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","color","textAlign","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/herna/OneDrive/Documentos/GitHub/muebleria-app/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["// frontend/src/pages/LoginPage.jsx\r\nimport React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Navbar            from '../components/Auth/Navbar';\r\nimport Login             from '../components/Auth/Login';\r\n\r\nimport { AuthContext }     from '../contexts/AuthContext';\r\nimport { CartContext }     from '../contexts/CartContext';\r\nimport { PurchaseContext } from '../contexts/PurchaseContext';\r\n\r\nexport default function LoginPage() {\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState('');\r\n\r\n  const { login }           = useContext(AuthContext);\r\n  const { clearCart }       = useContext(CartContext);\r\n  const { clearPurchases }  = useContext(PurchaseContext);\r\n\r\n  const handleLogin = async e => {\r\n    e.preventDefault();\r\n    const form     = e.target;\r\n    const usuario  = form.usuario.value.trim();\r\n    const password = form.password.value.trim();\r\n\r\n    if (!usuario || !password) {\r\n      setError('Faltan campos');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 1) Autenticación: obtenemos sólo el token\r\n      const res = await fetch('/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user: usuario, password })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) {\r\n        setError(data.msg || 'Credenciales inválidas');\r\n        return;\r\n      }\r\n\r\n      // 2) Cargamos el perfil completo desde el backend\r\n      const perfilRes = await fetch('/api/usuario/perfil', {\r\n        headers: { Authorization: `Bearer ${data.token}` }\r\n      });\r\n      const perfil = await perfilRes.json();\r\n      if (!perfilRes.ok) {\r\n        throw new Error(perfil.msg || 'Error al cargar perfil');\r\n      }\r\n\r\n      // 3) Guardamos token + perfil en el contexto\r\n      //    (AuthContext.login ahora acepta ambos argumentos)\r\n      login(data.token, perfil);\r\n\r\n      // 4) Limpiamos carrito y compras de otras sesiones\r\n      clearCart();\r\n      clearPurchases();\r\n\r\n      // 5) Redirigimos según rol\r\n      if (perfil.rol === 'admin') {\r\n        navigate('/admin/dashboard');\r\n      } else if (perfil.rol === 'monitor') {\r\n        navigate('/monitor');\r\n      } else {\r\n        navigate('/');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(err.message || 'Error de conexión con el servidor');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Login onSubmit={handleLogin} error={error} />\r\n      {error && (\r\n        <div style={{ color: 'red', textAlign: 'center', marginTop: '1rem' }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}