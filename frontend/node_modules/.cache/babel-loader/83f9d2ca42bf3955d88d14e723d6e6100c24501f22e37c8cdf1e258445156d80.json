{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cesar\\\\OneDrive\\\\Documentos\\\\GitHub\\\\muebleria-app\\\\frontend\\\\src\\\\pages\\\\CarritoPage.jsx\",\n  _s = $RefreshSig$();\n// src/pages/CarritoPage.jsx\nimport React, { useEffect, useState } from 'react';\nimport Navbar from '../components/Auth/Navbar';\nimport './CarritoPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CarritoPage() {\n  _s();\n  const [carrito, setCarrito] = useState(null);\n\n  // ——— Direcciones\n  const [direccion, setDireccion] = useState({\n    nombre: '',\n    calle: '',\n    ciudad: '',\n    estado: '',\n    cp: '',\n    telefono: '',\n    referencia: ''\n  });\n  const [direccionGuardada, setDireccionGuardada] = useState(false);\n  const [mensajeDireccion, setMensajeDireccion] = useState('');\n\n  // ——— Métodos de pago\n  const [metodos, setMetodos] = useState([]);\n  const [selectedMetodoId, setSelectedMetodoId] = useState(null);\n  const [nuevoMetodo, setNuevoMetodo] = useState(false);\n  const [detallesPago, setDetallesPago] = useState({\n    numero: '',\n    expiracion: '',\n    cvv: '',\n    email: ''\n  });\n  const [pagoGuardado, setPagoGuardado] = useState(false);\n  const [mensajePago, setMensajePago] = useState('');\n\n  // ——— Checkout final\n  const [mensajeFinal, setMensajeFinal] = useState('');\n  const token = localStorage.getItem('token');\n  const API = 'http://localhost:4000/api';\n  useEffect(() => {\n    // 1) Carga carrito\n    fetch(`${API}/carrito`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(r => r.json()).then(setCarrito).catch(console.error);\n\n    // 2) Carga direcciones\n    fetch(`${API}/direcciones`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(r => r.json()).then(dirs => {\n      if (dirs.length) {\n        const d = dirs[0];\n        setDireccion({\n          nombre: d.nombre_recibe,\n          calle: d.calle,\n          ciudad: d.ciudad,\n          estado: d.estado,\n          cp: d.cp,\n          telefono: d.telefono,\n          referencia: d.referencia || ''\n        });\n        setDireccionGuardada(true);\n        setMensajeDireccion('📦 Dirección cargada del servidor.');\n      }\n    }).catch(console.error);\n\n    // 3) Carga métodos de pago\n    fetch(`${API}/metodos`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(r => r.json()).then(mps => {\n      setMetodos(mps || []);\n      if (mps.length) {\n        const m = mps[0];\n        setSelectedMetodoId(m.id);\n        setNuevoMetodo(false);\n\n        // prefill detallesPago solo para mostrar label\n        if (m.tipo === 'tarjeta') {\n          setDetallesPago({\n            numero: '',\n            expiracion: '',\n            cvv: '',\n            email: ''\n          });\n        } else if (m.tipo === 'transferencia') {\n          setDetallesPago({\n            numero: '',\n            expiracion: '',\n            cvv: '',\n            email: m.titular\n          });\n        } else {\n          // efectivo\n          setDetallesPago({\n            numero: '',\n            expiracion: '',\n            cvv: '',\n            email: ''\n          });\n        }\n        setPagoGuardado(true);\n        setMensajePago('💳 Método de pago cargado del servidor.');\n      } else {\n        // si no hay ninguno, arrancamos en modo nuevo\n        setNuevoMetodo(true);\n      }\n    }).catch(console.error);\n  }, []);\n  if (!carrito) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Cargando carrito\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 24\n  }, this);\n\n  // — actualizar/eliminar ítem\n  const cambiarCantidad = (id, qty) => {\n    fetch(`${API}/carrito/detalle/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${token}`\n      },\n      body: JSON.stringify({\n        cantidad: qty\n      })\n    }).then(() => fetch(`${API}/carrito`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(r => r.json()).then(setCarrito)).catch(console.error);\n  };\n  const eliminarItem = id => cambiarCantidad(id, 0);\n\n  // — total\n  const total = carrito.detalles.reduce((sum, d) => sum + d.producto.precio_unitario * d.cantidad, 0);\n\n  // — guardar dirección\n  const guardarDireccion = async () => {\n    if (!direccion.nombre || !direccion.calle || !direccion.ciudad || !direccion.cp) {\n      return alert('Por favor completa nombre, calle, ciudad y código postal.');\n    }\n    try {\n      const res = await fetch(`${API}/direcciones`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          nombre_recibe: direccion.nombre,\n          calle: direccion.calle,\n          ciudad: direccion.ciudad,\n          estado: direccion.estado,\n          cp: direccion.cp,\n          telefono: direccion.telefono,\n          referencia: direccion.referencia\n        })\n      });\n      const body = await res.json();\n      if (!res.ok) throw new Error(body.msg || 'Error guardando dirección');\n      setDireccionGuardada(true);\n      setMensajeDireccion('📦 Dirección guardada en el servidor.');\n    } catch (e) {\n      alert('❌ ' + e.message);\n    }\n  };\n\n  // — guardar método de pago\n  const guardarMetodoPago = async () => {\n    // payload básico\n    let payload = {\n      tipo: nuevoMetodo ? metodoTipo : getMetodo(tipo)\n    };\n    // ... lógica igual que antes para tarjeta/paypal/efectivo\n    // omitted for brevity, idéntica a tu versión actual\n  };\n\n  // — eliminar método\n  const borrarMetodo = async () => {\n    if (!selectedMetodoId) return;\n    try {\n      const res = await fetch(`${API}/metodos/${selectedMetodoId}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!res.ok) throw new Error('Error borrando método');\n      // refresca lista\n      const nuevos = metodos.filter(m => m.id !== selectedMetodoId);\n      setMetodos(nuevos);\n      setSelectedMetodoId(null);\n      setNuevoMetodo(true);\n      setPagoGuardado(false);\n      setMensajePago('');\n    } catch (e) {\n      alert('❌ ' + e.message);\n    }\n  };\n\n  // — checkout\n  const handleCheckout = async () => {\n    if (!direccionGuardada || !pagoGuardado) {\n      return alert('Guarda tu dirección y método de pago antes de continuar.');\n    }\n    try {\n      const res = await fetch(`${API}/carrito/checkout`, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!res.ok) throw new Error('Error en checkout');\n      setMensajeFinal('✅ Tu compra se ha procesado correctamente.');\n    } catch (e) {\n      alert('❌ ' + e.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carrito-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDED2 Tu Carrito\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), carrito.detalles.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tu carrito est\\xE1 vac\\xEDo.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"direccion-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCE6 Direcci\\xF3n de env\\xEDo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: guardarDireccion,\n            className: \"guardar-btn\",\n            children: \"Guardar direcci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this), mensajeDireccion && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mensaje-confirmacion\",\n            children: mensajeDireccion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metodo-pago-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83D\\uDCB3 M\\xE9todo de pago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedMetodoId !== null && selectedMetodoId !== void 0 ? selectedMetodoId : 'nuevo',\n            onChange: e => {\n              if (e.target.value === 'nuevo') {\n                setNuevoMetodo(true);\n                setSelectedMetodoId(null);\n                setPagoGuardado(false);\n                setMensajePago('');\n              } else {\n                const id = parseInt(e.target.value, 10);\n                const m = metodos.find(x => x.id === id);\n                setSelectedMetodoId(id);\n                setNuevoMetodo(false);\n                // prefill si quieres…\n                setPagoGuardado(true);\n                setMensajePago('💳 Método de pago cargado del servidor.');\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Selecciona un m\\xE9todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), metodos.map(m => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: m.id,\n              children: m.tipo === 'tarjeta' ? `Tarjeta ••••${m.token_last4}` : m.tipo === 'transferencia' ? `PayPal (${m.titular})` : 'Efectivo (Pago al recibir)'\n            }, m.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"nuevo\",\n              children: \"+ Agregar nuevo m\\xE9todo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this), !nuevoMetodo && selectedMetodoId && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: borrarMetodo,\n            className: \"eliminar\",\n            children: \"Eliminar este m\\xE9todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 19\n          }, this), nuevoMetodo && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: guardarMetodoPago,\n              className: \"guardar-btn\",\n              children: \"Guardar m\\xE9todo de pago\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this)\n          }, void 0, false), mensajePago && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mensaje-confirmacion\",\n            children: mensajePago\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resumen-carrito\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Total: $\", total.toLocaleString(), \" MXN\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"pago-btn\",\n            onClick: handleCheckout,\n            children: \"Proceder al pago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 17\n          }, this), mensajeFinal && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mensaje-confirmacion\",\n            children: mensajeFinal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CarritoPage, \"/da0LoFul8kNiEW3DnY0vknPodw=\");\n_c = CarritoPage;\nvar _c;\n$RefreshReg$(_c, \"CarritoPage\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","CarritoPage","_s","carrito","setCarrito","direccion","setDireccion","nombre","calle","ciudad","estado","cp","telefono","referencia","direccionGuardada","setDireccionGuardada","mensajeDireccion","setMensajeDireccion","metodos","setMetodos","selectedMetodoId","setSelectedMetodoId","nuevoMetodo","setNuevoMetodo","detallesPago","setDetallesPago","numero","expiracion","cvv","email","pagoGuardado","setPagoGuardado","mensajePago","setMensajePago","mensajeFinal","setMensajeFinal","token","localStorage","getItem","API","fetch","headers","Authorization","then","r","json","catch","console","error","dirs","length","d","nombre_recibe","mps","m","id","tipo","titular","children","fileName","_jsxFileName","lineNumber","columnNumber","cambiarCantidad","qty","method","body","JSON","stringify","cantidad","eliminarItem","total","detalles","reduce","sum","producto","precio_unitario","guardarDireccion","alert","res","ok","Error","msg","e","message","guardarMetodoPago","payload","metodoTipo","getMetodo","borrarMetodo","nuevos","filter","handleCheckout","className","onClick","value","onChange","target","parseInt","find","x","map","token_last4","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/cesar/OneDrive/Documentos/GitHub/muebleria-app/frontend/src/pages/CarritoPage.jsx"],"sourcesContent":["// src/pages/CarritoPage.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport Navbar from '../components/Auth/Navbar';\r\nimport './CarritoPage.css';\r\n\r\nexport default function CarritoPage() {\r\n  const [carrito, setCarrito]               = useState(null);\r\n\r\n  // ——— Direcciones\r\n  const [direccion, setDireccion]           = useState({\r\n    nombre: '', calle: '', ciudad: '', estado: '', cp: '', telefono: '', referencia: ''\r\n  });\r\n  const [direccionGuardada, setDireccionGuardada] = useState(false);\r\n  const [mensajeDireccion, setMensajeDireccion]   = useState('');\r\n\r\n  // ——— Métodos de pago\r\n  const [metodos, setMetodos]               = useState([]);\r\n  const [selectedMetodoId, setSelectedMetodoId] = useState(null);\r\n  const [nuevoMetodo, setNuevoMetodo]       = useState(false);\r\n  const [detallesPago, setDetallesPago]     = useState({\r\n    numero: '', expiracion: '', cvv: '', email: ''\r\n  });\r\n  const [pagoGuardado, setPagoGuardado]     = useState(false);\r\n  const [mensajePago, setMensajePago]       = useState('');\r\n\r\n  // ——— Checkout final\r\n  const [mensajeFinal, setMensajeFinal]     = useState('');\r\n\r\n  const token = localStorage.getItem('token');\r\n  const API   = 'http://localhost:4000/api';\r\n\r\n  useEffect(() => {\r\n    // 1) Carga carrito\r\n    fetch(`${API}/carrito`, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then(r => r.json()).then(setCarrito)\r\n      .catch(console.error);\r\n\r\n    // 2) Carga direcciones\r\n    fetch(`${API}/direcciones`, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then(r => r.json())\r\n      .then(dirs => {\r\n        if (dirs.length) {\r\n          const d = dirs[0];\r\n          setDireccion({\r\n            nombre:    d.nombre_recibe,\r\n            calle:     d.calle,\r\n            ciudad:    d.ciudad,\r\n            estado:    d.estado,\r\n            cp:        d.cp,\r\n            telefono:  d.telefono,\r\n            referencia:d.referencia || ''\r\n          });\r\n          setDireccionGuardada(true);\r\n          setMensajeDireccion('📦 Dirección cargada del servidor.');\r\n        }\r\n      })\r\n      .catch(console.error);\r\n\r\n    // 3) Carga métodos de pago\r\n    fetch(`${API}/metodos`, { headers: { Authorization: `Bearer ${token}` } })\r\n      .then(r => r.json())\r\n      .then(mps => {\r\n        setMetodos(mps || []);\r\n        if (mps.length) {\r\n          const m = mps[0];\r\n          setSelectedMetodoId(m.id);\r\n          setNuevoMetodo(false);\r\n\r\n          // prefill detallesPago solo para mostrar label\r\n          if (m.tipo === 'tarjeta') {\r\n            setDetallesPago({ numero:'', expiracion:'', cvv:'', email:'' });\r\n          } else if (m.tipo === 'transferencia') {\r\n            setDetallesPago({ numero:'', expiracion:'', cvv:'', email:m.titular });\r\n          } else { // efectivo\r\n            setDetallesPago({ numero:'', expiracion:'', cvv:'', email:'' });\r\n          }\r\n          setPagoGuardado(true);\r\n          setMensajePago('💳 Método de pago cargado del servidor.');\r\n        } else {\r\n          // si no hay ninguno, arrancamos en modo nuevo\r\n          setNuevoMetodo(true);\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  if (!carrito) return <p>Cargando carrito…</p>;\r\n\r\n  // — actualizar/eliminar ítem\r\n  const cambiarCantidad = (id, qty) => {\r\n    fetch(`${API}/carrito/detalle/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type':'application/json',\r\n        Authorization: `Bearer ${token}`\r\n      },\r\n      body: JSON.stringify({ cantidad: qty })\r\n    })\r\n    .then(() => fetch(`${API}/carrito`, { headers:{ Authorization:`Bearer ${token}` }})\r\n      .then(r=>r.json()).then(setCarrito))\r\n    .catch(console.error);\r\n  };\r\n  const eliminarItem = id => cambiarCantidad(id, 0);\r\n\r\n  // — total\r\n  const total = carrito.detalles.reduce(\r\n    (sum, d) => sum + d.producto.precio_unitario * d.cantidad, 0\r\n  );\r\n\r\n  // — guardar dirección\r\n  const guardarDireccion = async () => {\r\n    if (!direccion.nombre||!direccion.calle||!direccion.ciudad||!direccion.cp) {\r\n      return alert('Por favor completa nombre, calle, ciudad y código postal.');\r\n    }\r\n    try {\r\n      const res = await fetch(`${API}/direcciones`, {\r\n        method: 'POST',\r\n        headers:{\r\n          'Content-Type':'application/json',\r\n          Authorization:`Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({\r\n          nombre_recibe: direccion.nombre,\r\n          calle:         direccion.calle,\r\n          ciudad:        direccion.ciudad,\r\n          estado:        direccion.estado,\r\n          cp:            direccion.cp,\r\n          telefono:      direccion.telefono,\r\n          referencia:    direccion.referencia\r\n        })\r\n      });\r\n      const body = await res.json();\r\n      if (!res.ok) throw new Error(body.msg||'Error guardando dirección');\r\n      setDireccionGuardada(true);\r\n      setMensajeDireccion('📦 Dirección guardada en el servidor.');\r\n    } catch(e) {\r\n      alert('❌ ' + e.message);\r\n    }\r\n  };\r\n\r\n  // — guardar método de pago\r\n  const guardarMetodoPago = async () => {\r\n    // payload básico\r\n    let payload = { tipo: nuevoMetodo ? metodoTipo : getMetodo(tipo) };\r\n    // ... lógica igual que antes para tarjeta/paypal/efectivo\r\n    // omitted for brevity, idéntica a tu versión actual\r\n  };\r\n\r\n  // — eliminar método\r\n  const borrarMetodo = async () => {\r\n    if (!selectedMetodoId) return;\r\n    try {\r\n      const res = await fetch(`${API}/metodos/${selectedMetodoId}`, {\r\n        method: 'DELETE',\r\n        headers:{ Authorization:`Bearer ${token}` }\r\n      });\r\n      if (!res.ok) throw new Error('Error borrando método');\r\n      // refresca lista\r\n      const nuevos = metodos.filter(m => m.id!==selectedMetodoId);\r\n      setMetodos(nuevos);\r\n      setSelectedMetodoId(null);\r\n      setNuevoMetodo(true);\r\n      setPagoGuardado(false);\r\n      setMensajePago('');\r\n    } catch(e) {\r\n      alert('❌ '+e.message);\r\n    }\r\n  };\r\n\r\n  // — checkout\r\n  const handleCheckout = async () => {\r\n    if (!direccionGuardada || !pagoGuardado) {\r\n      return alert('Guarda tu dirección y método de pago antes de continuar.');\r\n    }\r\n    try {\r\n      const res = await fetch(`${API}/carrito/checkout`, {\r\n        method: 'POST',\r\n        headers:{ Authorization:`Bearer ${token}` }\r\n      });\r\n      if (!res.ok) throw new Error('Error en checkout');\r\n      setMensajeFinal('✅ Tu compra se ha procesado correctamente.');\r\n    } catch(e) {\r\n      alert('❌ '+e.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"carrito-container\">\r\n        <h2>🛒 Tu Carrito</h2>\r\n        {carrito.detalles.length===0\r\n          ? <p>Tu carrito está vacío.</p>\r\n          : <>\r\n              {/* …items… */}\r\n              {/* Dirección */}\r\n              <div className=\"direccion-section\">\r\n                <h3>📦 Dirección de envío</h3>\r\n                {/* …inputs idénticos… */}\r\n                <button onClick={guardarDireccion} className=\"guardar-btn\">\r\n                  Guardar dirección\r\n                </button>\r\n                {mensajeDireccion && <p className=\"mensaje-confirmacion\">{mensajeDireccion}</p>}\r\n              </div>\r\n\r\n              {/* Método de pago */}\r\n              <div className=\"metodo-pago-section\">\r\n                <h3>💳 Método de pago</h3>\r\n                <select\r\n                  value={ selectedMetodoId ?? 'nuevo' }\r\n                  onChange={e => {\r\n                    if (e.target.value==='nuevo') {\r\n                      setNuevoMetodo(true);\r\n                      setSelectedMetodoId(null);\r\n                      setPagoGuardado(false);\r\n                      setMensajePago('');\r\n                    } else {\r\n                      const id = parseInt(e.target.value,10);\r\n                      const m  = metodos.find(x=>x.id===id);\r\n                      setSelectedMetodoId(id);\r\n                      setNuevoMetodo(false);\r\n                      // prefill si quieres…\r\n                      setPagoGuardado(true);\r\n                      setMensajePago('💳 Método de pago cargado del servidor.');\r\n                    }\r\n                  }}\r\n                >\r\n                  <option value=\"\">Selecciona un método</option>\r\n                  {metodos.map(m=>(\r\n                    <option key={m.id} value={m.id}>\r\n                      { m.tipo==='tarjeta'\r\n                          ? `Tarjeta ••••${m.token_last4}`\r\n                          : m.tipo==='transferencia'\r\n                            ? `PayPal (${m.titular})`\r\n                            : 'Efectivo (Pago al recibir)'\r\n                      }\r\n                    </option>\r\n                  ))}\r\n                  <option value=\"nuevo\">+ Agregar nuevo método</option>\r\n                </select>\r\n\r\n                {!nuevoMetodo && selectedMetodoId && (\r\n                  <button onClick={borrarMetodo} className=\"eliminar\">\r\n                    Eliminar este método\r\n                  </button>\r\n                )}\r\n\r\n                {nuevoMetodo && (\r\n                  <>\r\n                    {/* aquí renderizas los inputs para tarjeta/paypal */}\r\n                    {/* igual que tu versión anterior */}\r\n                    <button onClick={guardarMetodoPago} className=\"guardar-btn\">\r\n                      Guardar método de pago\r\n                    </button>\r\n                  </>\r\n                )}\r\n\r\n                {mensajePago && <p className=\"mensaje-confirmacion\">{mensajePago}</p>}\r\n              </div>\r\n\r\n              {/* Resumen y checkout */}\r\n              <div className=\"resumen-carrito\">\r\n                <h3>Total: ${total.toLocaleString()} MXN</h3>\r\n                <button className=\"pago-btn\" onClick={handleCheckout}>\r\n                  Proceder al pago\r\n                </button>\r\n                {mensajeFinal && <p className=\"mensaje-confirmacion\">{mensajeFinal}</p>}\r\n              </div>\r\n            </>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}