{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cesar\\\\muebleria-app\\\\frontend\\\\src\\\\pages\\\\LoginPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Login from '../components/Auth/Login';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    const form = e.target;\n    const user = form.usuario.value;\n    const password = form.password.value;\n    try {\n      const res = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        setError(data.msg || 'Error desconocido');\n        return;\n      }\n\n      // Guardar token\n      localStorage.setItem('token', data.token);\n      localStorage.setItem('rol', data.rol);\n      localStorage.setItem('nombres', data.nombres);\n\n      // Redirigir según rol\n      if (data.rol === 'admin') {\n        navigate('/admin/dashboard');\n      } else {\n        navigate('/');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Error de conexión con el servidor');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Login, {\n      onSubmit: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        textAlign: 'center',\n        marginTop: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginPage, \"N8ll6e7vZU6NAN/34gAy4+Cjbmg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginPage","_s","navigate","error","setError","handleLogin","e","preventDefault","form","target","user","usuario","value","password","res","fetch","method","headers","body","JSON","stringify","data","json","ok","msg","localStorage","setItem","token","rol","nombres","err","console","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","style","color","textAlign","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/cesar/muebleria-app/frontend/src/pages/LoginPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Login from '../components/Auth/Login';\r\n\r\nexport default function LoginPage() {\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState('');\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const form = e.target;\r\n    const user = form.usuario.value;\r\n    const password = form.password.value;\r\n\r\n    try {\r\n      const res = await fetch('/api/auth/login', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ user, password }),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (!res.ok) {\r\n        setError(data.msg || 'Error desconocido');\r\n        return;\r\n      }\r\n\r\n      // Guardar token\r\n      localStorage.setItem('token', data.token);\r\n      localStorage.setItem('rol', data.rol);\r\n      localStorage.setItem('nombres', data.nombres);\r\n\r\n      // Redirigir según rol\r\n      if (data.rol === 'admin') {\r\n        navigate('/admin/dashboard');\r\n      } else {\r\n        navigate('/');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Error de conexión con el servidor');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Login onSubmit={handleLogin} />\r\n      {error && (\r\n        <div style={{ color: 'red', textAlign: 'center', marginTop: '1rem' }}>\r\n          {error}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,IAAI,GAAGF,CAAC,CAACG,MAAM;IACrB,MAAMC,IAAI,GAAGF,IAAI,CAACG,OAAO,CAACC,KAAK;IAC/B,MAAMC,QAAQ,GAAGL,IAAI,CAACK,QAAQ,CAACD,KAAK;IAEpC,IAAI;MACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,iBAAiB,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV,IAAI;UAAEG;QAAS,CAAC;MACzC,CAAC,CAAC;MAEF,MAAMQ,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAE7B,IAAI,CAACR,GAAG,CAACS,EAAE,EAAE;QACXnB,QAAQ,CAACiB,IAAI,CAACG,GAAG,IAAI,mBAAmB,CAAC;QACzC;MACF;;MAEA;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,IAAI,CAACM,KAAK,CAAC;MACzCF,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEL,IAAI,CAACO,GAAG,CAAC;MACrCH,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEL,IAAI,CAACQ,OAAO,CAAC;;MAE7C;MACA,IAAIR,IAAI,CAACO,GAAG,KAAK,OAAO,EAAE;QACxB1B,QAAQ,CAAC,kBAAkB,CAAC;MAC9B,CAAC,MAAM;QACLA,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,CAAC,OAAO4B,GAAG,EAAE;MACZC,OAAO,CAAC5B,KAAK,CAAC2B,GAAG,CAAC;MAClB1B,QAAQ,CAAC,mCAAmC,CAAC;IAC/C;EACF,CAAC;EAED,oBACEP,OAAA,CAAAE,SAAA;IAAAiC,QAAA,gBACEnC,OAAA,CAACF,KAAK;MAACsC,QAAQ,EAAE5B;IAAY;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC/BlC,KAAK,iBACJN,OAAA;MAAKyC,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,SAAS,EAAE,QAAQ;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAT,QAAA,EAClE7B;IAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA,eACD,CAAC;AAEP;AAACpC,EAAA,CAnDuBD,SAAS;EAAA,QACdN,WAAW;AAAA;AAAAgD,EAAA,GADN1C,SAAS;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}